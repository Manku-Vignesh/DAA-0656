#include <stdio.h>
#include <limits.h>
#define INF INT_MAX
#define N 4 
int tsp(int graph[N][N]);
int main() {
    printf("Name : M.Vignesh\n");
    printf("Reg no : 192211849\n");
    int graph[N][N] = {
        {0, 10, 15, 20},
        {10, 0, 35, 25},
        {15, 35, 0, 30},
        {20, 25, 30, 0}
    };
    int result = tsp(graph);
    printf("Minimum cost of the TSP is: %d\n", result);
    return 0;
}
int tsp(int graph[N][N]) {
    int dp[1 << N][N];
    for (int i = 0; i < (1 << N); i++) {
        for (int j = 0; j < N; j++) {
            dp[i][j] = INF;
        }
    }
    dp[1][0] = 0;
    for (int mask = 1; mask < (1 << N); mask++) {
        for (int u = 0; u < N; u++) {
            if ((mask & (1 << u)) == 0) continue; 
            for (int v = 0; v < N; v++) {
                if (u == v || (mask & (1 << v)) == 0) continue; 
                dp[mask][u] = (dp[mask][u] < dp[mask ^ (1 << u)][v] + graph[v][u]) ? dp[mask][u] : dp[mask ^ (1 << u)][v] + graph[v][u];
            }
        }
    }
    int minCost = INF;
    for (int i = 1; i < N; i++) {
        minCost = (minCost < dp[(1 << N) - 1][i] + graph[i][0]) ? minCost : dp[(1 << N) - 1][i] + graph[i][0];
    }

    return minCost;
}
